/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package teacher;

import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import model.Assignment;
import model.Course;
import model.User;
import model.Utils;

/**
 *
 * @author rachanakeshav
 */
public class ManageCourseJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageCourseJPanel
     */
    private JPanel mainPanel;
    User user;
    Utils utils;
    Course selectedCourse;
    public ManageCourseJPanel(JPanel mainPanel, User user, Utils utils) {
        initComponents();
        this.mainPanel= mainPanel;
        this.utils = utils;
        this.user = user;
        PopulateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblHeader = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCourseList = new javax.swing.JTable();
        btnManage = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        lblSelect = new javax.swing.JLabel();
        btnHost = new javax.swing.JButton();
        btnCreateAssignment = new javax.swing.JButton();

        lblHeader.setFont(new java.awt.Font("Helvetica Neue", 1, 20)); // NOI18N
        lblHeader.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHeader.setText("Manage Course");

        tblCourseList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Course ID", "Course Name", "Course Time"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblCourseList);
        if (tblCourseList.getColumnModel().getColumnCount() > 0) {
            tblCourseList.getColumnModel().getColumn(0).setResizable(false);
            tblCourseList.getColumnModel().getColumn(1).setResizable(false);
            tblCourseList.getColumnModel().getColumn(2).setResizable(false);
        }

        btnManage.setText("Manage Students");
        btnManage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnManageActionPerformed(evt);
            }
        });

        btnBack.setText("< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        lblSelect.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        lblSelect.setText("Select course:");

        btnHost.setText("Host");
        btnHost.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHostActionPerformed(evt);
            }
        });

        btnCreateAssignment.setText("Create Assignment");
        btnCreateAssignment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateAssignmentActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblHeader, javax.swing.GroupLayout.DEFAULT_SIZE, 738, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(50, 50, 50)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lblSelect)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 640, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnManage, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(100, 100, 100)
                                        .addComponent(btnHost, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnCreateAssignment, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnHost, btnManage});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(lblHeader)
                .addGap(42, 42, 42)
                .addComponent(lblSelect)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnManage, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnHost, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCreateAssignment, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 198, Short.MAX_VALUE)
                .addComponent(btnBack)
                .addGap(18, 18, 18))
        );
    }// </editor-fold>//GEN-END:initComponents

    public void PopulateTable(){
        DefaultTableModel tbl = (DefaultTableModel) tblCourseList.getModel();
        tbl.setRowCount(0);
        for(Course c : utils.getCoursesWithProfID(user.getId())){
            Object[] row = new Object[4];
            row[0] = c;
            row[1] = c.getName();
            row[2] = c.getTime();
            
            tbl.addRow(row);
        }
    }
        
    private void btnManageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnManageActionPerformed
        //Get select Record
        int selectedRowIndex = tblCourseList.getSelectedRow();

        if(selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please Select a row to view.");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) tblCourseList.getModel();
        Object vitalSigns = (Course) model.getValueAt(selectedRowIndex, 0);

        if(vitalSigns instanceof Course c){
            selectedCourse = c;
            // TODO add your handling code here:
            ManageStudentsScoreJPanel panel = new ManageStudentsScoreJPanel(mainPanel, c, utils);
            mainPanel.add("ManageStudentsScoreJPanel", panel);
            CardLayout layout = (CardLayout) mainPanel.getLayout();
            layout.next(mainPanel);
        }
        else{
            JOptionPane.showMessageDialog(this, "Invalid data in the selected row.");
        }
        

        
    }//GEN-LAST:event_btnManageActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        mainPanel.remove(this);
        CardLayout layout = (CardLayout) mainPanel.getLayout();
        layout.previous(mainPanel);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnHostActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHostActionPerformed
        
        //Get the current course
        int selectedRowIndex = tblCourseList.getSelectedRow();

        if(selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please Select a row to view.");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) tblCourseList.getModel();
        Object vitalSigns = (Course) model.getValueAt(selectedRowIndex, 0);

        if(vitalSigns instanceof Course c){
            HostMeetingJPanel panel = new HostMeetingJPanel(mainPanel, utils, c);
            mainPanel.add("HostMeetingJPanel", panel);
            CardLayout layout = (CardLayout) mainPanel.getLayout();
            layout.next(mainPanel);
        }
        else{
            JOptionPane.showMessageDialog(this, "Invalid data in the selected row.");
        }
        
        
    }//GEN-LAST:event_btnHostActionPerformed

    private void btnCreateAssignmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateAssignmentActionPerformed
        // TODO add your handling code here:
                //Get the current course
        int selectedRowIndex = tblCourseList.getSelectedRow();

        if(selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please Select a row to view.");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) tblCourseList.getModel();
        Object vitalSigns = (Course) model.getValueAt(selectedRowIndex, 0);

        if(vitalSigns instanceof Course c){
            CreateAssignmentJPanel panel = new CreateAssignmentJPanel(mainPanel, user ,utils, c);
            mainPanel.add("CreateAssignmentJPanel", panel);
            CardLayout layout = (CardLayout) mainPanel.getLayout();
            layout.next(mainPanel);
        }
        else{
            JOptionPane.showMessageDialog(this, "Invalid data in the selected row.");
        }

    }//GEN-LAST:event_btnCreateAssignmentActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCreateAssignment;
    private javax.swing.JButton btnHost;
    private javax.swing.JButton btnManage;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblHeader;
    private javax.swing.JLabel lblSelect;
    private javax.swing.JTable tblCourseList;
    // End of variables declaration//GEN-END:variables
}
